@model PagedList.IPagedList<PBL3.Models.Account>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "Accounts List";

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>


@using (Html.BeginForm("Index", "Accounts", FormMethod.Get))
{
    <p>
        Find by name: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
}
<table class="table table-bordered">

    <tr>
        <th>
            @Html.ActionLink("Account_Name", "Index", new { sortOrder = ViewBag.SortOrder == "name_asc" ? "name_desc" : "name_asc", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Account_Password", "Index", new { sortOrder = ViewBag.SortOrder == "password_asc" ? "password_desc" : "password_asc", currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Account_Role", "Index", new { sortOrder = ViewBag.SortOrder == "role_asc" ? "role_desc" : "role_asc", currentFilter = ViewBag.CurrentFilter })
        </th>
        @*<th>
            @Html.ActionLink("Account_ID", "Index", new { sortOrder = ViewBag.SortOrder == "ID_asc" ? "ID_desc" : "ID_asc", currentFilter = ViewBag.CurrentFilter })
        </th>*@
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ACCOUNT_NAME)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ACCOUNT_PASSWORD)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ACCOUNT_ROLE)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AccountInfo.USER_NAME)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ACCOUNT_ID.Trim() }) |
                @Html.ActionLink("Details", "Details", new { id = item.ACCOUNT_ID.Trim() }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ACCOUNT_ID.Trim() })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter }))

