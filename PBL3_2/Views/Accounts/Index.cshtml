
@model PagedList.IPagedList<PBL3_2.Models.Account>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<h2>Authority</h2>





@using (Html.BeginForm("Index", "ThietBis", FormMethod.Get))
{
    <p>
        @Html.TextBox("strSearchThietBi", ViewBag.CurrentFilter as string)
        <button type="submit" class="btn btn-primary">Search</button> |
    @*    <a href="~/ThietBis/Index">Back to list</a>*@
    </p>
}
<table class="table table-borde red">

    <tr>
        <th>
            @*Khi người dùng bấm sắp xếp lần đầu sẽ là Ascending, những lần sau sẽ ngược lại với SortOrder đang có. VD: Asc-Desc-Asc-...  *@
            Username

        </th>
        <th>
            Password
        </th>
        <th>
            @Html.ActionLink("Role", "Index", new { SortOrder = (ViewBag.SortOrder == null) ? "Asc" : (ViewBag.sortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "ACCOUNT_ROLE", strSearchThietBi = ViewBag.CurrentFilter })

        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ACCOUNT_NAME)
            </td>
            <td>
                @{ 
                    string temp = "";
                    for(int i = 0; i< item.ACCOUNT_PASSWORD.Length; i++)
                    {
                        temp += "*";
                    }
                }
                @temp
            </td>
            <td>
                @{
                    string x = "";
                    switch (item.ACCOUNT_ROLE) {
                        case "0":
                            x = "Khach hang";
                            break;
                        case "1":
                            x = "Nhan vien";
                            break;
                        case "2":
                            x = "Admin";
                            break;
                    }


                }
                @x
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ACCOUNT_ID }) 
            </td>
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.SortOrder, currentFilter = ViewBag.CurrentFilter }))

